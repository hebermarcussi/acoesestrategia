import streamlit as st
import pandas as pd
import yfinance as yf
import matplotlib.pyplot as plt
import plotly.express as px
import datetime as dt 
from datetime import date, timedelta





col1, col2, col3 = st.columns([2,2,1])

with col2:
    st.image('take2.png', width=100,)
st.markdown('---')
st.markdown("<h2 style='text-align: center; color: black;'>Modo Manual Estrategia</h2>", unsafe_allow_html=True)
st.markdown('---')
st.markdown("<h5 style='text-align: center; color: black;'>Filtro para Teste</h5>", unsafe_allow_html=True)

with st.form(key= 'form1'):
    col1, col2 = st.columns(2)
    with col1:
        data_incio = st.date_input('Data de incio do teste') 
    with col2:
        data_Fim = st.date_input('Data de Fim do teste')    
    acoes =['AALR3.SA',
'ABCB4.SA',
'ABEV3.SA',
'AFLT3.SA',
'AGRO3.SA',
'AGXY3.SA',
'AHEB3.SA',
'AHEB5.SA',
'AHEB6.SA',
'ALLD3.SA',
'ALPA3.SA',
'ALPA4.SA',
'ALPK3.SA',
'ALSO3.SA',
'ALUP11.SA',
'ALUP3.SA',
'ALUP4.SA',
'AMAR3.SA',
'AMBP3.SA',
'AMER3.SA',
'ANIM3.SA',
'APER3.SA',
'APTI4.SA',
'ARZZ3.SA',
'ASAI3.SA',
'ATMP3.SA',
'ATOM3.SA',
'AURA33.SA',
'AVLL3.SA',
'AZEV3.SA',
'AZUL4.SA',
'B3SA3.SA',
'BAHI3.SA',
'BALM3.SA',
'BALM4.SA',
'BAUH4.SA',
'BAZA3.SA',
'BBAS3.SA',
'BBDC3.SA',
'BBDC4.SA',
'BBSE3.SA',
'BDLL3.SA',
'BDLL4.SA',
'BEEF3.SA',
'BEES3.SA',
'BEES4.SA',
'BGIP3.SA',
'BGIP4.SA',
'BIOM3.SA',
'BKBR3.SA',
'BLAU3.SA',
'BMEB3.SA',
'BMEB4.SA',
'BMGB4.SA',
'BMIN3.SA',
'BMKS3.SA',
'BMOB3.SA',
'BNBR3.SA',
'BOBR4.SA',
'BPAC11.SA',
'BPAC3.SA',
'BPAC5.SA',
'BPAN4.SA',
'BPAR3.SA',
'BRAP3.SA',
'BRAP4.SA',
'BRBI11.SA',
'BRFS3.SA',
'BRGE11.SA',
'BRGE12.SA',
'BRGE3.SA',
'BRGE5.SA',
'BRGE6.SA',
'BRGE7.SA',
'BRGE8.SA',
'BRIV4.SA',
'BRKM3.SA',
'BRKM5.SA',
'BRKM6.SA',
'BRML3.SA',
'BRPR3.SA',
'BRSR3.SA',
'BRSR5.SA',
'BRSR6.SA',
'BSLI3.SA',
'BSLI4.SA',
'CALI3.SA',
'CAMB3.SA',
'CAML3.SA',
'CARD3.SA',
'CASH3.SA',
'CASN3.SA',
'CASN4.SA',
'CBEE3.SA',
'CCRO3.SA',
'CEAB3.SA',
'CEBR3.SA',
'CEBR5.SA',
'CEBR6.SA',
'CEDO3.SA',
'CEDO4.SA',
'CEEB3.SA',
'CEEB5.SA',
'CEED3.SA',
'CEED4.SA',
'CEGR3.SA',
'CEPE3.SA',
'CEPE5.SA',
'CEPE6.SA',
'CGAS3.SA',
'CGAS5.SA',
'CGRA3.SA',
'CGRA4.SA',
'CIEL3.SA',
'CLSC3.SA',
'CLSC4.SA',
'CMIG3.SA',
'CMIG4.SA',
'CMIN3.SA',
'COCE3.SA',
'COCE5.SA',
'COGN3.SA',
'CORR4.SA',
'CPFE3.SA',
'CPLE3.SA',
'CPLE5.SA',
'CPLE6.SA',
'CRDE3.SA',
'CRFB3.SA',
'CRIV3.SA',
'CRIV4.SA',
'CRPG3.SA',
'CRPG5.SA',
'CRPG6.SA',
'CSAB3.SA',
'CSAB4.SA',
'CSAN3.SA',
'CSED3.SA',
'CSMG3.SA',
'CSNA3.SA',
'CSRN3.SA',
'CSRN5.SA',
'CSRN6.SA',
'CTKA3.SA',
'CTKA4.SA',
'CTNM3.SA',
'CTNM4.SA',
'CTSA3.SA',
'CTSA4.SA',
'CURY3.SA',
'CVCB3.SA',
'CXSE3.SA',
'CYRE3.SA',
'DEXP4.SA',
'DIRR3.SA',
'DMVF3.SA',
'DOHL3.SA',
'DOHL4.SA',
'DOTZ3.SA',
'DTCY3.SA',
'DXCO3.SA',
'EALT3.SA',
'EALT4.SA',
'ECOR3.SA',
'EEEL4.SA',
'EGIE3.SA',
'EKTR3.SA',
'EKTR4.SA',
'ELET3.SA',
'ELET5.SA',
'ELET6.SA',
'ELMD3.SA',
'EMAE3.SA',
'EMAE4.SA',
'EMBR3.SA',
'ENAT3.SA',
'ENBR3.SA',
'ENEV3.SA',
'ENGI11.SA',
'ENGI3.SA',
'ENGI4.SA',
'ENJU3.SA',
'ENMT3.SA',
'ENMT4.SA',
'EPAR3.SA',
'EQPA3.SA',
'EQPA5.SA',
'EQPA6.SA',
'EQPA7.SA',
'EQTL3.SA',
'ESPA3.SA',
'ESTR3.SA',
'ESTR4.SA',
'ETER3.SA',
'EUCA3.SA',
'EUCA4.SA',
'EVEN3.SA',
'EZTC3.SA',
'FESA3.SA',
'FESA4.SA',
'FHER3.SA',
'FIGE3.SA',
'FIGE4.SA',
'FIQE3.SA',
'FLRY3.SA',
'FRAS3.SA',
'FRIO3.SA',
'FRTA3.SA',
'G2DI33.SA',
'GEPA3.SA',
'GEPA4.SA',
'GFSA3.SA',
'GGBR3.SA',
'GGBR4.SA',
'GGPS3.SA',
'GMAT3.SA',
'GOAU3.SA',
'GOAU4.SA',
'GOLL4.SA',
'GPAR3.SA',
'GPIV33.SA',
'GRND3.SA',
'GSHP3.SA',
'GUAR3.SA',
'HAGA3.SA',
'HAGA4.SA',
'HAPV3.SA',
'HASH11.SA',
'HBOR3.SA',
'HBRE3.SA',
'HBTS5.SA',
'HETA3.SA',
'HETA4.SA',
'HOOT4.SA',
'HYPE3.SA',
'IGBR3.SA',
'IGTI11.SA',
'INEP3.SA',
'IRBR3.SA',
'ITSA3.SA',
'ITSA4.SA',
'ITUB3.SA',
'ITUB4.SA',
'JBSS3.SA',
'JFEN3.SA',
'JHSF3.SA',
'JOPA3.SA',
'JOPA4.SA',
'KEPL3.SA',
'KLBN11.SA',
'KLBN4.SA',
'KRSA3.SA',
'LAND3.SA',
'LAVV3.SA',
'LCAM3.SA',
'LEVE3.SA',
'LIGT3.SA',
'LJQQ3.SA',
'LLIS3.SA',
'LOGG3.SA',
'LOGN3.SA',
'LPSB3.SA',
'LREN3.SA',
'LUPA3.SA',
'LUXM3.SA',
'LUXM4.SA',
'LVTC3.SA',
'LWSA3.SA',
'MAPT3.SA',
'MAPT4.SA',
'MATD3.SA',
'MDIA3.SA',
'MDNE3.SA',
'MEAL3.SA',
'MELK3.SA',
'MERC3.SA',
'MERC4.SA',
'MGEL4.SA',
'MGLU3.SA',
'MILS3.SA',
'MMXM3.SA',
'MNDL3.SA',
'MNPR3.SA',
'MOAR3.SA',
'MODL11.SA',
'MODL3.SA',
'MODL4.SA',
'MOSI3.SA',
'MOVI3.SA',
'MRFG3.SA',
'MRSA3B.SA',
'MRSA5B.SA',
'MRSA6B.SA',
'MRVE3.SA',
'MSPA3.SA',
'MSPA4.SA',
'MTIG3.SA',
'MTIG4.SA',
'MTRE3.SA',
'MTSA3.SA',
'MTSA4.SA',
'MULT3.SA',
'MWET3.SA',
'MWET4.SA',
'MYPK3.SA',
'NEOE3.SA',
'NORD3.SA',
'NTCO3.SA',
'NUTR3.SA',
'ODER4.SA',
'ODPV3.SA',
'OFSA3.SA',
'OIBR3.SA',
'OIBR4.SA',
'OPCT3.SA',
'ORVR3.SA',
'OSXB3.SA',
'PARD3.SA',
'PATI3.SA',
'PATI4.SA',
'PCAR3.SA',
'PDGR3.SA',
'PDTC3.SA',
'PEAB3.SA',
'PEAB4.SA',
'PETR3.SA',
'PETR4.SA',
'PETZ3.SA',
'PFRM3.SA',
'PGMN3.SA',
'PINE4.SA',
'PLAS3.SA',
'PMAM3.SA',
'POMO3.SA',
'POMO4.SA',
'POSI3.SA',
'PPLA11.SA',
'PRIO3.SA',
'PRNR3.SA',
'PSSA3.SA',
'PTBL3.SA',
'PTNT3.SA',
'PTNT4.SA',
'QUAL3.SA',
'RADL3.SA',
'RAIL3.SA',
'RAPT3.SA',
'RAPT4.SA',
'RDNI3.SA',
'RDOR3.SA',
'RECV3.SA',
'REDE3.SA',
'RENT3.SA',
'RNEW11.SA',
'RNEW3.SA',
'ROMI3.SA',
'RPAD3.SA',
'RPAD5.SA',
'RPAD6.SA',
'RPMG3.SA',
'RSID3.SA',
'RSUL4.SA',
'SANB11.SA',
'SANB3.SA',
'SANB4.SA',
'SAPR11.SA',
'SAPR4.SA',
'SBFG3.SA',
'SBSP3.SA',
'SCAR3.SA',
'SEER3.SA',
'SEQL3.SA',
'SGPS3.SA',
'SHOW3.SA',
'SHUL3.SA',
'SHUL4.SA',
'SIMH3.SA',
'SLCE3.SA',
'SLED3.SA',
'SLED4.SA',
'SMTO3.SA',
'SNSY3.SA',
'SNSY5.SA',
'SOJA3.SA',
'SOMA3.SA',
'SOND3.SA',
'SOND5.SA',
'SOND6.SA',
'SQIA3.SA',
'STBP3.SA',
'SULA11.SA',
'SULA3.SA',
'SULA4.SA',
'SUZB3.SA',
'TAEE11.SA',
'TAEE3.SA',
'TAEE4.SA',
'TASA3.SA',
'TASA4.SA',
'TCNO3.SA',
'TCNO4.SA',
'TCSA3.SA',
'TECN3.SA',
'TEKA3.SA',
'TEKA4.SA',
'TELB3.SA',
'TELB4.SA',
'TEND3.SA',
'TFCO4.SA',
'TGMA3.SA',
'TKNO4.SA',
'TOTS3.SA',
'TPIS3.SA',
'TRIS3.SA',
'TRPL3.SA',
'TRPL4.SA',
'TUPY3.SA',
'TXRX3.SA',
'TXRX4.SA',
'UCAS3.SA',
'UGPA3.SA',
'UNIP3.SA',
'UNIP5.SA',
'UNIP6.SA',
'USIM5.SA',
'USIM6.SA',
'VALE3.SA',
'VBBR3.SA',
'VIIA3.SA',
'VITT3.SA',
'VIVA3.SA',
'VIVT3.SA',
'VLID3.SA',
'VSPT3.SA',
'VULC3.SA',
'VVEO3.SA',
'WEGE3.SA',
'WEST3.SA',
'WHRL3.SA',
'WHRL4.SA',
'WIZS3.SA',
'WLMM3.SA',
'WLMM4.SA',
'XPBR31.SA',
'YDUQ3.SA']
    col1, col2 = st.columns(2)
    with col1:
        Ncontrato = st.number_input('Quantidade Açoes', min_value=100)
    with col2:
        porcentagem = st.number_input('Adicione a % queda', max_value=0.00)
    selecao = st.selectbox('Selecione a ação', acoes)
    Botao_filtrar = st.form_submit_button('Filtrar')
if Botao_filtrar == True:
    data_incio = pd.to_datetime(data_incio)
    data_Fim = pd.to_datetime(data_Fim)
    data_Fim = data_Fim + timedelta(1)
    acoes_df =  yf.download(selecao, data_incio, data_Fim, auto_adjust=True)
    acoes_df = acoes_df.drop(columns=['Volume'])
    acoes_df['Close A'] = acoes_df['Close'].shift(1)
    acoes_df.dropna(inplace=True)
    acoes_df['Minima %'] = (acoes_df['Close A'] - acoes_df['Low'])/ acoes_df['Close A'] *(-100)
    acoes_df['Fechamento %'] = (acoes_df['Close A'] - acoes_df['Close'])/ acoes_df['Close A'] *(-100)
    acoes_df = acoes_df.sort_values('Date',ascending = False)
    filtro_df = acoes_df['Minima %'] < porcentagem
    filtrado_df = acoes_df[filtro_df]
    filtrado_df['Resultado'] = filtrado_df['Fechamento %'] - porcentagem
    filtrado_df['Valor'] = ((filtrado_df['Resultado']/100)* filtrado_df['Close'])* Ncontrato
    valortotal = filtrado_df['Valor'].sum()
    porc_total = filtrado_df['Resultado'].sum()
    valortotal = round(valortotal,2)
    porc_total = round(porc_total,2)
    contotal = len(filtrado_df['Resultado'])
    acerto = 0
    erro = 0
    for i in filtrado_df['Resultado']:
        if i > 0:
            acerto = acerto+1
        if i < 0:
            erro = erro+1
    porc_acerto = (acerto*100)/contotal
    porc_erro = (erro*100)/contotal
    porc_acerto = round(porc_acerto)
    porc_erro = round((porc_erro)*-1)
    v_entrada = acoes_df['Close'][0]
    su_valor = porcentagem/100
    su_valor_a = (su_valor * v_entrada )+ v_entrada
    su_valor_a = round(su_valor_a,2)
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.metric(selecao, value = valortotal, delta= str(porc_total)+'%')
    with col2:
        st.metric('Total Entradas:', value= contotal)
    with col3:
        st.metric('Total Ganhos:', value= acerto, delta=str(porc_acerto)+'%')
    with col4:
        st.metric('Total Perdas:', value= erro, delta=str(porc_erro)+'%')
    st.metric('Valor Compra Proximo dia', value= su_valor_a )
    
    grafico_df = filtrado_df.sort_values('Date',ascending = True)
    grafico_df['Acumulado'] = grafico_df['Valor'].cumsum()
    grafico = grafico_df['Acumulado']
    st.line_chart(grafico)
    st.markdown("<h5 style='text-align: center; color: black;'>Tabela filtrada</h5>", unsafe_allow_html=True)
    filtrado_df = filtrado_df.drop(columns=['Close A'])
    acoes_df = acoes_df.drop(columns=['Close A'])
    st.dataframe(filtrado_df, width=1200)
    st.markdown("<h5 style='text-align: center; color: black;'>Tabela Completa</h5>", unsafe_allow_html=True)
    st.dataframe(acoes_df, width=900)


